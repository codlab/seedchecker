{"version":3,"sources":["views/index-sections/SectionDateForm.js","components/Navbars/ExamplesNavbar.js","views/Index.js","index.js"],"names":["SHINY_TYPE","SectionButtons","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","results","infinityMode","squareOnly","seed","setState","date","toDate","switchDate","console","log","frame","calculatedDate","add","format","_this$state","pokemon","PokemonFrame","limit","length","advanceFrame","result","getShinyState","valid","shiny","SHINY","NONE","SQUARE","push","e","error","undefined","type","STAR","_this2","_this$state2","showModal","react_default","a","createElement","Fragment","Modal","isOpen","toggle","dismiss","className","aria-label","onClick","aria-hidden","id","Button","color","Container","Row","Col","sm","md","lg","FormGroup","InputGroup","DateTime_default","onChange","value","inputProps","placeholder","InputGroupAddon","addonType","InputGroupText","Input","event","setSeed","target","js_default","isOn","toInfinity","defaultValue","onColor","offColor","toSquare","calculate","Table","striped","bordered","hover","map","index","_result$current","current","toShiny","toString","toDateFrame","Component","ExamplesNavbar","_React$useState","React","useState","_React$useState2","slicedToArray","navbarColor","setNavbarColor","_React$useState3","_React$useState4","navbarCollapse","setNavbarCollapse","useEffect","updateNavbarColor","document","documentElement","scrollTop","body","window","addEventListener","removeEventListener","Navbar","classnames","color-on-scroll","expand","NavbarBrand","data-placement","to","title","tag","Link","aria-expanded","toggled","classList","Collapse","navbar","Nav","NavItem","NavLink","href","Index","remove","Navbars_ExamplesNavbar","SectionDateForm","ReactDOM","render","react_router_dom","react_router","path","views_Index","getElementById"],"mappings":"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","file":"static/js/main.f140d6a4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Switch from \"react-bootstrap-switch\";\nimport ReactDatetime from \"react-datetime\";\n\nimport PokemonFrame, {SHINY} from \"libseedchecker\";\n\nimport {\n  Button,\n  FormGroup,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Table,\n  Modal,\n  Row,\n  Col\n} from \"reactstrap\";\n\nconst SHINY_TYPE = [\"-\", \"☆\", \"◇\"];\n\nclass SectionButtons extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {results:[], infinityMode: false, squareOnly: false};\n  }\n\n  setSeed(seed) {\n    this.setState({seed});\n  }\n\n  switchDate(date) {\n    if(date.toDate) {\n      this.setState({switchDate: date});\n    } else {\n      console.log(\"invalid date\");\n    }\n  }\n\n  toDateFrame(frame) {\n    const { calculatedDate } = this.state;\n    if(calculatedDate) {\n      const added = calculatedDate.add(frame, \"days\");\n\n      return added.format(\"DD/MM/YYYY\");\n    }\n    return \"\";\n  }\n\n  toInfinity(infinityMode) {\n    this.setState({infinityMode});\n  }\n\n  toSquare(squareOnly) {\n    console.log(squareOnly);\n    this.setState({squareOnly});\n  }\n\n  calculate() {\n    const { seed, infinityMode, squareOnly, switchDate } = this.state;\n    try {\n      const pokemon = new PokemonFrame(seed, 0);\n      const results = [];\n  \n      const limit = squareOnly ? 5 : 50;\n  \n      while((infinityMode && results.length < limit) || (!infinityMode && results.length == 0)) {\n        pokemon.advanceFrame(1);\n        const result = pokemon.getShinyState();\n        var valid = result.shiny != SHINY.NONE;\n        if(squareOnly) valid = valid && result.shiny == SHINY.SQUARE;\n  \n        valid && results.push(result);\n      }\n  \n      this.setState({results, calculatedDate: switchDate});\n    } catch(e) {\n      this.setState({error: \"Error while calculating the Pokémon info\", results: [], calculatedDate: undefined});\n    }\n  }\n\n  toShiny(type) {\n    switch(type) {\n      case SHINY.STAR: return SHINY_TYPE[1];\n      case SHINY.SQUARE: return SHINY_TYPE[2];\n      default: return \"\";\n    }\n  }\n\n  dismiss() {\n    this.setState({error: undefined});\n  }\n\n  render() {\n    const {results, error} = this.state;\n    const showModal = error && error.length > 0;\n    console.log(\"footer\", showModal);\n    return (\n      <>\n        <Modal isOpen={showModal} toggle={() => this.dismiss()}>\n          <div className=\"modal-header\">\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              type=\"button\"\n              onClick={() => this.dismiss()}\n            >\n              <span aria-hidden={true}>×</span>\n            </button>\n            <h5\n              className=\"modal-title text-center\"\n              id=\"exampleModalLabel\"\n            >\n              An error occured\n            </h5>\n          </div>\n          <div className=\"modal-body\">{error}</div>\n          <div className=\"modal-footer\">\n            <div className=\"left-side\">\n            </div>\n            <div className=\"right-side\">\n              <Button className=\"btn-link\" color=\"danger\" type=\"button\" onClick={() => this.dismiss()}>\n                OK\n              </Button>\n            </div>\n          </div>\n        </Modal>\n        \n        <div className=\"section section-buttons\">\n          <Container>\n            <div className=\"title\">\n              <h2>Seed shiny finder</h2>\n            </div>\n            <Row>\n              <Col sm=\"12\" md=\"6\" lg=\"6\">\n              <div id=\"buttons\">\n                <div className=\"title\">\n                  <h3>\n                    Configuration <br />\n                  </h3>\n                </div>\n                  <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\">\n                      <FormGroup>\n                        <InputGroup className=\"date\" id=\"datetimepicker\">\n                          <ReactDatetime\n                            onChange={(value) => this.switchDate(value)}\n                            inputProps={{\n                              placeholder: \"Select your switch date\"\n                            }}\n                          />\n                          <InputGroupAddon addonType=\"append\">\n                            <InputGroupText>\n                              <span className=\"glyphicon glyphicon-calendar\">\n                                <i aria-hidden={true} className=\"fa fa-calendar\" />\n                              </span>\n                            </InputGroupText>\n                          </InputGroupAddon>\n                        </InputGroup>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm=\"12\" md=\"12\" lg=\"12\">\n                      <FormGroup>\n                        <Input placeholder=\"Your Pokémon seed\" type=\"text\"\n                          onChange={event => this.setSeed(event.target.value)}/>\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm=\"6\" md=\"4\" lg=\"4\">\n                      <div id=\"switches\">\n                        <p>\n                          <span className=\"note\">Infinity</span>\n                        </p>\n                        <label>\n                          <Switch\n                            onChange={(e, isOn) => this.toInfinity(isOn)}\n                            defaultValue={false}\n                            onColor=\"primary\"\n                            offColor=\"primary\"\n                          />\n                        </label>\n                      </div>\n                    </Col>\n                    <Col sm=\"6\" md=\"4\" lg=\"4\">\n                      <div id=\"switches\">\n                        <p>\n                          <span className=\"note\">Square</span>\n                        </p>\n                        <label>\n                          <Switch\n                            onChange={(e, isOn) => this.toSquare(isOn)}\n                            defaultValue={false}\n                            onColor=\"primary\"\n                            offColor=\"primary\"\n                          />\n                        </label>\n                      </div>\n                    </Col>\n                    <Col sm=\"6\" md=\"4\" lg=\"4\">\n                      <Button color=\"success\" type=\"button\" onClick={() => this.calculate()}>\n                        GO !\n                      </Button>\n                    </Col>\n                  </Row>\n                </div>\n              </Col>\n\n              <Col sm=\"12\" md=\"6\" lg=\"6\">\n                <div id=\"buttons\">\n                  <div className=\"title\">\n                    <h3>\n                      Results <br />\n                    </h3>\n                  </div>\n                </div>\n                <Row  sm=\"12\" md=\"12\" lg=\"12\">\n                  <Col sm=\"12\" md=\"12\" lg=\"12\">\n                    {\n                      ((results||[]).length > 0) &&\n                      (<Table striped bordered hover>\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Type</th>\n                          <th>Seed</th>\n                          <th>DD/MM/YYYY</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                      {\n                        (results||[]).map((result, index) => {\n                          const { frame, seed } = result.current;\n                          console.log(seed);\n\n                          return (<tr>\n                            <td>\n                              #{frame}\n                            </td>\n                            <td>\n                              {this.toShiny(result.shiny)}\n                            </td>\n                            <td>\n                              {seed.toString(16)}\n                            </td>\n                            <td>\n                              {this.toDateFrame(frame)}\n                            </td>\n                          </tr>);\n                        })\n                      }\n                      </tbody>\n                      </Table>)\n                    }\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SectionButtons;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport {\n  Collapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container\n} from \"reactstrap\";\n\nfunction ExamplesNavbar() {\n  const [navbarColor, setNavbarColor] = React.useState(\"\");\n  const [navbarCollapse, setNavbarCollapse] = React.useState(false);\n\n  const toggleNavbarCollapse = () => {\n    setNavbarCollapse(!navbarCollapse);\n    document.documentElement.classList.toggle(\"nav-open\");\n  };\n\n  React.useEffect(() => {\n    const updateNavbarColor = () => {\n      if (\n        document.documentElement.scrollTop > 299 ||\n        document.body.scrollTop > 299\n      ) {\n        setNavbarColor(\"\");\n      } else if (\n        document.documentElement.scrollTop < 300 ||\n        document.body.scrollTop < 300\n      ) {\n        setNavbarColor(\"\");\n      }\n    };\n\n    window.addEventListener(\"scroll\", updateNavbarColor);\n\n    return function cleanup() {\n      window.removeEventListener(\"scroll\", updateNavbarColor);\n    };\n  });\n  return (\n    <Navbar\n      className={classnames(\"fixed-top\", navbarColor)}\n      color-on-scroll=\"300\"\n      expand=\"lg\"\n    >\n      <Container>\n        <div className=\"navbar-translate\">\n          <NavbarBrand\n            data-placement=\"bottom\"\n            to=\"/index\"\n            target=\"_blank\"\n            title=\"Coded by Creative Tim\"\n            tag={Link}\n          >\n            Shiny Seed Finder\n          </NavbarBrand>\n          <button\n            aria-expanded={navbarCollapse}\n            className={classnames(\"navbar-toggler navbar-toggler\", {\n              toggled: navbarCollapse\n            })}\n            onClick={toggleNavbarCollapse}\n          >\n            <span className=\"navbar-toggler-bar bar1\" />\n            <span className=\"navbar-toggler-bar bar2\" />\n            <span className=\"navbar-toggler-bar bar3\" />\n          </button>\n        </div>\n        <Collapse\n          className=\"justify-content-end\"\n          navbar\n          isOpen={navbarCollapse}\n        >\n          <Nav navbar>\n            <NavItem>\n              <NavLink\n                data-placement=\"bottom\"\n                href=\"https://twitter.com/codlab\"\n                target=\"_blank\"\n                title=\"Follow me on Twitter\"\n              >\n                <i className=\"fa fa-twitter\" />\n                <p className=\"d-lg-none\">Twitter</p>\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                data-placement=\"bottom\"\n                href=\"https://www.instagram.com/codlabtech\"\n                target=\"_blank\"\n                title=\"Follow me on Instagram\"\n              >\n                <i className=\"fa fa-instagram\" />\n                <p className=\"d-lg-none\">codlabtech</p>\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                data-placement=\"bottom\"\n                href=\"https://www.github.com/codlab/seedchecker\"\n                target=\"_blank\"\n                title=\"GitHub\"\n              >\n                <i className=\"fa fa-github\" />\n                <p className=\"d-lg-none\">GitHub</p>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default ExamplesNavbar;\n","import React from \"react\";\n\nimport SectionDateForm from \"views/index-sections/SectionDateForm.js\";\nimport ExamplesNavbar from \"components/Navbars/ExamplesNavbar\";\n\nfunction Index() {\n  document.documentElement.classList.remove(\"nav-open\");\n  React.useEffect(() => {\n    document.body.classList.add(\"index\");\n    return function cleanup() {\n      document.body.classList.remove(\"index\");\n    };\n  });\n  return (\n    <>\n      <ExamplesNavbar />\n      <div className=\"main\">\n        <SectionDateForm />\n      </div>\n    </>\n  );\n}\n\nexport default Index;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport \"assets/css/bootstrap.min.css\";\nimport \"assets/scss/paper-kit.scss\";\nimport \"assets/demo/demo.css\";\nimport Index from \"views/Index.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/index\" render={props => <Index {...props} />} />\n        <Redirect to=\"/index\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}